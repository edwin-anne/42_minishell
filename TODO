MINISHELL: 
    1.1 EXECUTING (lola):
        1.1 built-ins commands:
            ✔ echo with the option -n @done(25-03-11 17:17)
              ✔ echo multiple arg no space between arg @done(25-03-22 17:38)
            ✔ cd with only a relative or abs path @done(25-03-22 17:38)
            ✔ pwd with no option (verif s'il se sert de l'env) @done(25-03-13 18:39)
            ✔ export with no option @done(25-03-08 15:06)
            ✔ unset with no options @done(25-03-09 16:11)
            ✔ env with no options or arguments @done(25-03-10 17:53) 
                ☐ env s'exec dans l'enfant
            ☐ free toutes les struct de minishell avant exit
            ✔ echo -n -n (ne doit rien écrire) @done(25-03-22 12:18)
            ✔ exit with no options @done(25-03-17 11:34)

    2.1 PARSING (Edwin):
        2.1 INTERACTIVE mode:
            ☐ ctrl-C display a new prompt on a new line
            ☐ ctrl-D exits the shell
            ☐ ctrl-\ does nothing
    
    3.1 COMMUN:
        3.1 verification:
            ✔ si -n fonctionne sur echo. @done(25-03-11 17:09)
            ✔ remplacer ft_printf par ft_fdprintf pour les builtins. @done(25-03-12 14:39)
    
1. EXECUTING (Lola):
    handling redirection:
        ☐ detecter si il y a une redirection (>, >>, <).
        ☐ ordre de priorite : heredoc -> redir entree -> redir sortie.
        ☐ implementer dup2 pour :
            - rediriger STDIN/STDOUT vers les fichiers.
            - restore les fds originaux apres l'execution.
        ☐ valider les permissions des fichiers avant l'execution.
    
    handling heredocs (<<):
        ☐ detecter les heredocs en premier.
        ☐ creer des fichiers tmp unique.
        ☐ gerer des multiples heredocs -> dernier heredoc ecrase les precedents.
        ☐ suppr les fichiers tmp avec unlink (apres utilisation, si signaux ctrl+c, error case).
    
    handling pipes:
        ☐ 
    features:
        ☐ handling redir :
             ☐ savoir si y'a une redir
             ☐ savoir si y'a un here_doc en 1er
             ☐ save les fds 
             ☐ ouvrir/fermer des pipes
        ☐ handling dup2 : dup avec la bonne redir
        ☐ 
    tofix:
        ☐ test: "export =" -> segfault


TODO : executing checklist (in child)
    
check where to redirect the entry and if we need, redirect the output
If we have an here_doc do it first
if we have multiple here_doc we need to stock them then erase it with the next here_doc
! ulimit -n (if we open to much fd)? open file/pipe in the child dynamicly
find path to cmd and execve
do it for every pipe/cmd
!! handle exit code !

    todo 2 : if we have only one cmd (no pipe)
    
redirecting then check if we have a builtins (for the parent)? if not a builtins then fork, redirect the child output/entry and execve

    todo 3 : multiple cmd (1 or + pipes)
    ! if we have a builtin like cd it don't work because it change the PWD and OLDPWD of the CHILD not the main
    ? pipex but mine need some modifications (creation of pipes and structs etc)
    ? pipex need to be executed from left to right (changing one while when creating my lst of cmd)
todo : redirection
    
redirect the STDIN to the last IN or HDC redirection (before the pipe)
if we don't have the permission on the infile the command isn't exec and the outfile isn't created if it doesn't exist! even if we don't have the perms we do every here_doc before exit/quit
finally we redirect the STDOUT to the last OUT or APP and create it if it doesn't exist
! don't forget to unlink the tmp file of each heredoc before killing the child? redirection with pipes ? boolean for handle_out to see if we find a out or not

    todo 3.1 : pipes
    
ulimit -n change the limit for both but they are separate for example :
ulimit -n 25 set the limit to 25 so the main can open 25 fd and the child can open 25 fd too
if the main open a fd (24 left) the child still have 25 left
? so to handle it maybe we can create each pipe in the child before the redirection

todo 4 : cmd 
check path for every command with access and our envp list
! if no path execve wil "fail" and so we need to free evrything
execve